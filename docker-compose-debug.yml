version: "3.8"

services:

    client:
        build:
            context: .
            dockerfile: etc/docker/Dockerfile.client.debug
            target: production
        ports:
            - 3001:3001
        restart: always

    api:
        build:
            context: .
            dockerfile: etc/docker/Dockerfile.api.debug
            target: production
        secrets:
            - postgres-connectionstring
            - cosmos-account
            - cosmos-key
        environment:
            - APPLICATION__POSTGRESOPTIONS__CONNECTIONSTRING=/run/secrets/postgres-connectionstring
            - APPLICATION__COSMOSOPTIONS__ACCOUNT=/run/secrets/cosmos-account
            - APPLICATION__COSMOSOPTIONS__KEY=/run/secrets/cosmos-key
        ports:
            - 3002:3002
        restart: always

    nginx:
        depends_on:
            - api
            - client
        build:
            context: .
            dockerfile: etc/docker/nginx-debug.Dockerfile
        ports:
            - 80:80
            - 443:443
        restart: always

    postgres:
        image: postgres
        secrets:
            - postgres-user
            - postgres-password
        environment:
            - PGDATA=/var/lib/postgresql/data/pgdata
            - POSTGRES_USER_FILE/run/secrets/postgres-user
            - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-password
        ports:
            - 5432:5432
        volumes:
            - balasolu-postgres:/var/lib/postgresql/data
        restart: always

secrets:

    postgres-user:
        file: secrets/postgres-user
    postgres-password:
        file: secrets/postgres-password
    postgres-connectionstring:
        file: secrets/postgres-connectionstring
    discord-token:
        file: secrets/discord-token
    cosmos-account:
        file: secrets/cosmos-account
    cosmos-key:
        file: secrets/cosmos-key

volumes:

    balasolu-postgres:
        external: true